import os

from utils.db import Database

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –ë–î
request = ['first_question',
           'second_question',
           'third_question',
           'fourth_question',
           'fifth_question',
           'sixth_question',
           'seventh_question',
           'eighth_question',
           'ninth_question',
           'tenth_question']


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞
def send_questions(number: int, category: int):
    db = Database(os.getenv('DATABASE_NAME'))
    message = db.select_question(number, category)
    return message


# –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
def result(numbers: tuple, category: int, user_id: id):
    mistakes_answer = []  # –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≤—ã–≤–æ–¥–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤, –æ—à–∏–±–æ–∫ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    db = Database(os.getenv('DATABASE_NAME'))
    score = 0
    for i in range(10):
        correct_answer = db.select_correct_answer(numbers[i], category)
        user_answer = db.select_from_users_table(request[i], user_id)
        if correct_answer == user_answer:
            score += 1
        else:
            mistake_str = (f'<u>–í–æ–ø—Ä–æ—Å {i + 1}</u>: {db.select_question(numbers[i], category)}\n'
                           f'<u>–í–∞—à –æ—Ç–≤–µ—Ç</u>: {user_answer}\n<u>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</u>: {correct_answer}')
            mistakes_answer.append(mistake_str)
    try:
        if db.select_columns_from_users_table(['result'], user_id=user_id)[0] != 10:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω—É
            message_text = '\n\n'.join(mistakes_answer)
            return score, message_text
        else:
            message_text = '–£ –≤–∞—Å –Ω–µ—Ç –æ—à–∏–±–æ–∫!üò± –ö—Ä—É—Ç–æ!üî•'
            return score, message_text
    except TypeError:
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω—É
        message_text = '\n\n'.join(mistakes_answer)
        return score, message_text
